user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept        on;
    use                 epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log  /var/log/nginx/access.log  main buffer=16k flush=5s;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    server_tokens       off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=1000r/s;
    limit_req_status 429;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Upstream API Gateway servers
    upstream api_gateway {
        least_conn;
        server gateway1:8080 max_fails=3 fail_timeout=30s;
        server gateway2:8080 max_fails=3 fail_timeout=30s;
        server gateway3:8080 backup;
        
        keepalive 32;
        zone api_gateway 64k;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate     /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;

        # Proxy configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";

        # Cache configuration
        proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m inactive=60m;

        location / {
            limit_req zone=api_rate_limit burst=100 nodelay;
            proxy_pass http://api_gateway;
            proxy_cache api_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_lock on;
        }

        location /health {
            access_log off;
            proxy_pass http://api_gateway;
        }

        error_page 429 @ratelimited;
        location @ratelimited {
            return 429 '{"error": "rate_limit_exceeded"}';
        }
    }
}